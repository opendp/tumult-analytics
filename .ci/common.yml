variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pypoetry"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  # Force nox to produce colorful logs:
  FORCE_COLOR: "true"
  # Enable feature flags
  # https://docs.gitlab.com/runner/configuration/feature-flags.html
  FF_SCRIPT_SECTIONS: "true"
  FF_USE_FASTZIP: "true"

.base:
  image: registry.gitlab.com/tumult-labs/ops/ci/linux:python3.10
  before_script:
    - java -version
    - python --version
    - poetry self show
    # Use same abbreviated SHA of first 7 characters across different CI jobs for the same commit.
    # Without this there are random failures due to different abbreviations while installing apro package.
    # https://github.com/mtkennerly/dunamai/issues/89
    - git config core.abbrev 7
    # Set up SSH config so that the runner can `pip install` out of GitLab
    # repositories.
    - mkdir -p ~/.ssh/
    - cp $GITLAB_SSH_KNOWN_HOSTS ~/.ssh/known_hosts
    - chmod 600 "$CI_SSH_KEY"
    - cp -pv "$CI_SSH_KEY" ~/.ssh/id_ed25519
    - poetry install --only scripting
    - source .venv/bin/activate
  artifacts:
    when: always
    expire_in: 1 week
  cache:
    # Cache the pip cache. While the cache could be persisted across changes to
    # the Poetry lock file, clearing it when that changes provides a good way to
    # keep the cache from growing too large due to old packages.
    - key:
        files: ["poetry.lock"]
      paths: [".cache/pip", ".cache/pypoetry"]
  tags: [aws-small]
  interruptible: true
  after_script:
    # Just to be safe, remove the key after the job finishes
    - rm -v ~/.ssh/id_ed25519
